AWSTemplateFormatVersion: '2010-09-09'
Description: This Template will create the supporting infrastructure for Day2 SecurityBot
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Application Configuration
        Parameters:
          - Environment
      - Label:
          default: Artifacts Configuration
        Parameters:
          - S3BucketName
          - ECRImageURI
          - PluginNames
      - Label:
          default: Day2 SecurityBot Configuration
        Parameters:
          - ScheduleExpression
          - VpcCIDR
          - Day2SecurityBotScheduledSubnet1CIDR
          - Day2SecurityBotScheduledSubnet2CIDR
          - ExecutionRoleArn 
          - TaskRoleArn
    ParameterLabels:
      Environment:
        default: Environment Type such as Prod , QA , STG , DEV
      S3BucketName:
        default: S3 Bucket to download Auditors python scripts
      ScheduleExpression:
        default: Cron expression to run ECS Fargate Task
      ECRImageURI:
        default: ECR Image URL
      PluginNames:
        default: Plugin Names
      VpcCIDR:
        default: Please enter the IP range (CIDR notation) for this VPC
      Day2SecurityBotScheduledSubnet1CIDR:
        default: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
      Day2SecurityBotScheduledSubnet2CIDR:
        default: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
      ExecutionRoleArn:
       default: Arn of Day2 SecurityBot Execution Role
      TaskRoleArn:
       default: Arn of Day2 SecurityBot TaskRole
      
Parameters:
  ExecutionRoleArn:
    Description: The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make AWS API calls on your behalf. 
    Type: String
    Default: ""
  TaskRoleArn:
    Description: The short name or full Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants containers in the task permission to call AWS APIs on your behalf
    Type: String
    Default: ""
  Environment:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: dev
  S3BucketName:
    Type: String
    Description: Public S3 bucket which holds the artifacts python auditor scripts
    Default: dev-artifact-bucket-us-east-1-908268824556
  ScheduleExpression:
    Type: String
    Description: time at which to invoke this Fargate Task
    Default: rate(12 hours)
  ECRImageURI:
    Type: String
    Description: ECR URI of the Day2 SecurityBot container
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.77.0.0/16
  PluginNames:
    Description: Names of auditors to be loaded during Fargate task run
    Type: String
    Default: 'Amazon_APIGW_Auditor,Amazon_S3_Auditor'
  Day2SecurityBotScheduledSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in
      the first Availability Zone
    Type: String
    Default: 10.77.10.0/24
  Day2SecurityBotScheduledSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in
      the second Availability Zone
    Type: String
    Default: 10.77.20.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'VpcCIDR'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref 'Environment'
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref 'Environment'
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref 'InternetGateway'
      VpcId: !Ref 'VPC'
  Day2SecurityBotScheduledSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Ref 'Day2SecurityBotScheduledSubnet1CIDR'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment} Public Subnet (AZ1)'
  Day2SecurityBotScheduledSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'VPC'
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      CidrBlock: !Ref 'Day2SecurityBotScheduledSubnet2CIDR'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment} Public Subnet (AZ2)'
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'VPC'
      Tags:
        - Key: Name
          Value: !Sub '${Environment} Public Routes'
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'
  Day2SecurityBotScheduledSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'Day2SecurityBotScheduledSubnet1'
  Day2SecurityBotScheduledSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'Day2SecurityBotScheduledSubnet2'
  Day2SecurityBotS3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref 'PublicRouteTable'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref 'VPC'
  Day2SecurityBotEcrDkrEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref 'Day2SecurityBotSecurityGroup'
      SubnetIds:
        - !Ref 'Day2SecurityBotScheduledSubnet1'
        - !Ref 'Day2SecurityBotScheduledSubnet2'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcId: !Ref 'VPC'
  Day2SecurityBotSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Day2SecurityBot Security Group
      GroupDescription: Security group with HTTPS for Electric Eye Fargate
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
          Description: HTTPS Inbound
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
  Day2SecurityBotECSCloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join
        - '-'
        - - Day2SecurityBot
          - !Ref 'AWS::StackName'
      RetentionInDays: 90
  Day2SecurityBotECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Day2SecurityBotCluster
      ClusterSettings:
        - Name: containerInsights
          Value: enabled

  Day2SecurityBotECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: !Ref 'ECRImageURI'
          Name: Day2SecurityBot
          Environment:
            - Name: SH_SCRIPTS_BUCKET
              Value: !Ref 'S3BucketName'
            - Name: PluginNames
              Value: !Ref 'PluginNames'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'Day2SecurityBotECSCloudWatchLogsGroup'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: ecs
      Cpu: 2048
      ExecutionRoleArn: !Ref ExecutionRoleArn
      Memory: 4096
      NetworkMode: awsvpc
      TaskRoleArn: !Ref TaskRoleArn
      Family: Day2SecurityBot2SecurityHubTask
      RequiresCompatibilities:
        - FARGATE
  Day2SecurityBotTaskScheduler:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: !Ref 'ScheduleExpression'
      State: ENABLED
      Targets:
        - Arn: !GetAtt 'Day2SecurityBotECSCluster.Arn'
          RoleArn: !Ref TaskRoleArn
          Id: Day2SecurityBotTaskScheduler
          EcsParameters:
            TaskDefinitionArn: !Ref 'Day2SecurityBotECSTaskDefinition'
            TaskCount: 1
            LaunchType: FARGATE
            PlatformVersion: LATEST
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - !Ref 'Day2SecurityBotSecurityGroup'
                Subnets:
                  - !Ref 'Day2SecurityBotScheduledSubnet1'
                  - !Ref 'Day2SecurityBotScheduledSubnet2'
Outputs:
  StackName:
    Description: Stack name.
    Value: !Sub '${AWS::StackName}'
  VPCId:
    Description: VPC Id
    Value: !Ref 'VPC'
  SubnetId1:
    Description: Subnet Id 1
    Value: !Ref 'Day2SecurityBotScheduledSubnet1'
  SubnetId2:
    Description: Subnet Id 1
    Value: !Ref 'Day2SecurityBotScheduledSubnet2'
  SecurityGroupId:
    Description: Security Group Id of Day2 Security Bot
    Value: !Ref 'Day2SecurityBotSecurityGroup'
  ECSTaskDefinition:
    Description: Task Definition of Day2 Security Bot
    Value: !Ref 'Day2SecurityBotECSTaskDefinition'
  LaunchType:
    Description: Launch Type
    Value: FARGATE
  AssignPublicIp:
    Description: Public IP
    Value: ENABLED
  S3Bucket:
    Description: S3BucketName
    Value: !Ref 'S3BucketName'
  Cluster:
    Description: Cluster Name
    Value: !Ref 'Day2SecurityBotECSCluster'