AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates an IAM role for SecurityBot.
Resources:

  securitybottaskrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MontyCloud-SecurityBotTaskRole
      Policies:
        - PolicyName: securitybottaskpolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - access-analyzer:ListAnalyzers
                  - apigateway:GET
                  - appmesh:DescribeMesh
                  - appmesh:DescribeVirtualNode
                  - appmesh:ListMeshes
                  - appmesh:ListVirtualNodes
                  - appstream:DescribeFleets
                  - appstream:DescribeImages
                  - appstream:DescribeUsers
                  - backup:DescribeProtectedResource
                  - cloudformation:DescribeStacks
                  - cloudfront:ListDistributions
                  - cloudfront:GetDistribution
                  - cloudtrail:DescribeTrails
                  - cloudtrail:ListTrails
                  - cloudwatch:GetMetricData
                  - codebuild:BatchGetProjects
                  - codebuild:ListProjects
                  - cognito-idp:DescribeUserPool
                  - cognito-idp:ListUserPools
                  - detective:ListGraphs
                  - dms:DescribeReplicationInstances
                  - ds:DescribeDirectories
                  - ds:ListLogSubscriptions
                  - dynamodb:DescribeTable
                  - dynamodb:ListTables
                  - dynamodb:DescribeContinuousBackups
                  - dynamodb:DescribeTimeToLive
                  - ec2:DescribeAddresses
                  - ec2:DescribeFlowLogs
                  - ec2:DescribeImageAttribute
                  - ec2:DescribeImages
                  - ec2:DescribeInstanceAttribute
                  - ec2:DescribeInstances
                  - ec2:DescribeSecurityGroupReferences
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSnapshotAttribute
                  - ec2:DescribeSnapshots
                  - ec2:DescribeVolumes
                  - ec2:DescribeVpcs
                  - ec2:GetEbsDefaultKmsKeyId
                  - ec2:GetEbsEncryptionByDefault
                  - ecs:ListClusters
                  - ecs:DescribeClusters
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:GetLifecyclePolicy
                  - ecr:GetRepositoryPolicy
                  - eks:DescribeCluster
                  - eks:ListClusters
                  - elasticfilesystem:DescribeFileSystems
                  - elasticache:DescribeCacheClusters
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticmapreduce:DescribeCluster
                  - elasticmapreduce:DescribeSecurityConfiguration
                  - elasticmapreduce:GetBlockPublicAccessConfiguration
                  - elasticmapreduce:ListClusters
                  - es:DescribeElasticsearchDomain
                  - es:ListDomainNames
                  - firehose:DescribeDeliveryStream
                  - firehose:ListDeliveryStreams
                  - globalaccelerator:ListAccelerators
                  - globalaccelerator:ListListeners
                  - globalaccelerator:ListEndpointGroups
                  - globalaccelerator:DescribeAcceleratorAttributes
                  - glue:GetSecurityConfiguration
                  - glue:GetResourcePolicy
                  - glue:GetCrawler
                  - glue:GetDataCatalogEncryptionSettings
                  - glue:ListCrawlers
                  - guardduty:ListDetectors
                  - iam:GetAccountPasswordPolicy
                  - iam:ListUsers
                  - iam:ListAccessKeys
                  - iam:ListMfaDevices
                  - iam:ListUserPolicies
                  - iam:ListAttachedUserPolicies
                  - iam:ListServerCertificates
                  - imagebuilder:ListImagePipelines
                  - imagebuilder:GetImagePipeline
                  - imagebuilder:ListImageRecipes
                  - imagebuilder:GetImageRecipe
                  - kafka:DescribeCluster
                  - kafka:ListClusters
                  - kinesis:DescribeStream
                  - kinesis:ListStreams
                  - kinesisanalyticsv2:ListApplications
                  - kinesisanalyticsv2:DescribeApplication
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:GetKeyPolicy
                  - kms:GetKeyRotationStatus
                  - kms:ListAliases
                  - kms:ListKeys
                  - lambda:ListFunctions
                  - license-manager:GetLicenseConfiguration
                  - license-manager:ListLicenseConfigurations
                  - macie2:GetMacieSession
                  - managedblockchain:GetNetwork
                  - managedblockchain:ListMembers
                  - managedblockchain:ListNetworks
                  - managedblockchain:GetNode
                  - managedblockchain:GetMember
                  - managedblockchain:ListNodes
                  - mq:DescribeBroker
                  - mq:ListBrokers
                  - qldb:DescribeLedger
                  - qldb:ListJournalS3Exports
                  - qldb:ListLedgers
                  - ram:GetResourceShares
                  - rds:DescribeDBClusterParameterGroups
                  - rds:DescribeDBClusterParameters
                  - rds:DescribeDBClusters
                  - rds:DescribeDBClusterSnapshotAttributes
                  - rds:DescribeDBClusterSnapshots
                  - rds:DescribeDBInstances
                  - rds:DescribeDBParameterGroups
                  - rds:DescribeDBParameters
                  - rds:DescribeDBSnapshotAttributes
                  - rds:DescribeDBSnapshots
                  - redshift:DescribeClusters
                  - redshift:DescribeLoggingStatus
                  - route53:ListHostedZones
                  - s3:GetBucketLogging
                  - s3:GetBucketPolicy
                  - s3:GetBucketPolicyStatus
                  - s3:GetBucketVersioning
                  - s3:GetAccountPublicAccessBlock
                  - s3:GetEncryptionConfiguration
                  - s3:GetLifecycleConfiguration
                  - s3:GetObject
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - sagemaker:DescribeEndpoint
                  - sagemaker:DescribeModel
                  - sagemaker:DescribeNotebookInstance
                  - sagemaker:ListEndpoints
                  - sagemaker:ListModels
                  - sagemaker:ListNotebookInstances
                  - secretsmanager:ListSecrets
                  - securityhub:BatchImportFindings
                  - securityhub:GetFindings
                  - shield:DescribeDRTAccess
                  - shield:DescribeProtection
                  - shield:DescribeSubscription
                  - sns:GetTopicAttributes
                  - sns:ListSubscriptions
                  - sns:ListSubscriptionsByTopic
                  - sns:ListTopics
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:DescribeInstanceAssociationsStatus
                  - ssm:DescribeInstanceInformation
                  - ssm:DescribeInstancePatches
                  - ssm:DescribeInstancePatchStates
                  - ssm:DescribeInstanceProperties
                  - sts:GetCallerIdentity
                  - sqs:ListQueues
                  - sqs:GetQueueAttributes
                  - workspaces:DescribeWorkspaceDirectories
                  - workspaces:DescribeWorkspaces
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ['ecs-tasks.amazonaws.com']
            Action:
              - sts:AssumeRole
  securitybotexecutionrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MontyCloud-SecurityBotExecutionRole
      Policies:
        - PolicyName: securitybotexecpolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - kms:Decrypt
                  - kms:DescribeKey
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: '*'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
  SecurityBotChatOpsExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MontyCloud-SecurityBotChatOpsExecRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: MontyCloud-ChatOps-RolePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter
            - ssm:GetParameters
            - kms:Decrypt
            Resource: '*'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: { Service: lambda.amazonaws.com }
          Action:
          - sts:AssumeRole
  securitybotpolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: This policy grants SecurityBot permissions
      Path: /
      ManagedPolicyName: securitybotpolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: LambdaPermissions
            Effect: Allow
            Action:
              - lambda:GetFunction
              - lambda:CreateFunction
              - lambda:DeleteFunction
              - lambda:GetFunctionConfiguration
              - lambda:AddPermission
              - lambda:RemovePermission
            Resource: '*'
          - Sid: STSPermissions
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: '*'
          - Sid: CFNPermissions
            Effect: Allow
            Action:
              - cloudformation:DescribeStackResource
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:ValidateTemplate
              - cloudformation:DescribeStacks
            Resource: '*'
          - Sid: S3Permissions
            Effect: Allow
            Action:
              - s3:*
            Resource: '*'
          - Sid: CloudWatchPermissions
            Effect: Allow
            Action:
              - cloudwatch:*
              - events:*
            Resource: '*'
          - Sid: IAMPermissions
            Effect: Allow
            Action:
              - iam:*
            Resource: '*'
          - Sid: SNS
            Effect: Allow
            Action:
              - sns:*
            Resource: '*'
          - Sid: ECS
            Effect: Allow
            Action:
              - guardduty:*
              - securityhub:*
              - ecs:*
              - ec2:*
            Resource: '*'
          - Sid: CloudwatchLogs
            Effect: Allow
            Action:
              - logs:*
            Resource: '*'
          - Sid: ECRPermissions
            Effect: Allow
            Action:
              - ecr:*
            Resource: '*'
          - Sid: S3CrossAccountPermission
            Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - arn:aws:s3:::mc-dev1-blueprints/bots/security_bot/*
  securitybotrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MontyCloud-SecurityBotRole
      Path: /
      ManagedPolicyArns:
        - !Ref 'securitybotpolicy'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - ssm.amazonaws.com
                - events.amazonaws.com
Outputs:
  SecurityBotRole:
    Description: Arn of SecurityBotRole , Copy this value to later paste it at TextBox of the Launch BluePrints wizard
    Value: !GetAtt 'securitybotrole.Arn'
  SecurityBotPolicy:
    Description: Arn of SecurityBotPolicy , these are the permissions needed by the Role assumed by the CloudFormation
    Value: !Ref 'securitybotpolicy'
  SecurityBotTaskRole:
    Description: Arn of SecurityBotTaskRole
    Value: !GetAtt 'securitybottaskrole.Arn'
  SecurityBotExecutionRole:
    Description: Arn of SecurityBotExecutionRole
    Value: !GetAtt  'securitybotexecutionrole.Arn'
